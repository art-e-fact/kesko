# automatically generated by the FlatBuffers compiler, do not modify

# namespace: urdf

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class PackageMap(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = PackageMap()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsPackageMap(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # PackageMap
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # PackageMap
    def PackageName(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # PackageMap
    def PackagePath(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

def PackageMapStart(builder):
    builder.StartObject(2)

def Start(builder):
    PackageMapStart(builder)

def PackageMapAddPackageName(builder, packageName):
    builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(packageName), 0)

def AddPackageName(builder, packageName):
    PackageMapAddPackageName(builder, packageName)

def PackageMapAddPackagePath(builder, packagePath):
    builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(packagePath), 0)

def AddPackagePath(builder, packagePath):
    PackageMapAddPackagePath(builder, packagePath)

def PackageMapEnd(builder):
    return builder.EndObject()

def End(builder):
    return PackageMapEnd(builder)
